{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,UAIpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OADAC,QAAQC,IAAIL,GACL,IAAIM,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLR,EAEFM,EAAQ,CAAER,WAAUC,UAGpBQ,EAAO,CAAET,WAAUC,S,GAEpBA,E,IAdPL,EAAKe,iBAAiB,UAkBtB,SAAuBC,GACrBA,EAAEC,iBAGF,IAFA,IAAIC,EAAgBC,OAAOnB,EAAKK,MAAMe,OAE7BC,EAAW,EAAGA,GAAYrB,EAAKsB,OAAOF,MAAOC,GAAY,EAQhElB,EAAckB,EAAUH,GACrBK,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBI,QAAQC,IAAI,uBAAwCe,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OAC1DP,EAAA4B,OAAOC,QAAQ,uBAAwCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBI,QAAQC,IAAI,sBAAuCe,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OACzDP,EAAA4B,OAAOG,QAAQ,sBAAqCJ,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9Da,GAAiBC,OAAOnB,EAAK8B,KAAKV,OAEpCJ,EAAEe,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form ');\n\nform.addEventListener('submit', onStartCreate);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(delay);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onStartCreate(e) {\n  e.preventDefault();\n  let increaseDelay = Number(form.delay.value);\n  // let position = 0;\n  for (let position = 1; position <= form.amount.value; position += 1) {\n    // if (position === 1) {\n    //   increaseDelay;\n    // } else {\n    //   increaseDelay += Number(form.step.value);\n    // }\n    // console.log(increaseDelay);\n\n    createPromise(position, increaseDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    increaseDelay += Number(form.step.value);\n  }\n  e.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","increaseDelay","Number","value","position1","amount","then","param","concat","Notify","success","catch","failure","step","currentTarget","reset"],"version":3,"file":"03-promises.c81fbb0b.js.map"}